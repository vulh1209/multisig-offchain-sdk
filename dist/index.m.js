import{AbiCoder as n}from"ethers";var t={name:"AtherlabsMultiSig",version:"1.0.0"},e={Nonce:[{name:"nonce",type:"uint256"}]},r={OffChainTransaction:[{name:"to",type:"address"},{name:"value",type:"uint256"},{name:"data",type:"bytes"},{name:"nonce",type:"uint256"}]};function a(){return a=Object.assign?Object.assign.bind():function(n){for(var t=1;t<arguments.length;t++){var e=arguments[t];for(var r in e)Object.prototype.hasOwnProperty.call(e,r)&&(n[r]=e[r])}return n},a.apply(this,arguments)}var i=/*#__PURE__*/function(){function i(n,e){this.domain=void 0,this.domain=a({},t,{verifyingContract:n,chainId:e.toString()})}var o=i.prototype;return o.signCancelTxNonce=function(n,t){try{return Promise.resolve(n.signTypedData(this.domain,e,{nonce:t}))}catch(n){return Promise.reject(n)}},o.signOffChainTransaction=function(t,e){try{var i=n.defaultAbiCoder().encode(["bytes"],[e.data]);return Promise.resolve(t.signTypedData(this.domain,r,a({},e,{data:i})))}catch(n){return Promise.reject(n)}},i}();export{t as DOMAIN_BASE_CONFIG,e as EIP712_NONCE_TYPES,r as EIP712_OFFCHAIN_TRANSACTION_TYPES,i as MultiSigOffChainSDK};
