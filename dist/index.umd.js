!function(e,n){"object"==typeof exports&&"undefined"!=typeof module?n(exports,require("ethers")):"function"==typeof define&&define.amd?define(["exports","ethers"],n):n((e||self).multisigOffchainSdk={},e.ethers)}(this,function(e,n){var t={name:"AtherlabsMultiSig",version:"1.0.0"},i={Nonce:[{name:"nonce",type:"uint256"}]},r={OffChainTransaction:[{name:"to",type:"address"},{name:"value",type:"uint256"},{name:"data",type:"bytes"},{name:"nonce",type:"uint256"}]};function a(){return a=Object.assign?Object.assign.bind():function(e){for(var n=1;n<arguments.length;n++){var t=arguments[n];for(var i in t)Object.prototype.hasOwnProperty.call(t,i)&&(e[i]=t[i])}return e},a.apply(this,arguments)}var o=/*#__PURE__*/function(){function e(e,n){this.domain=void 0,this.domain=a({},t,{verifyingContract:e,chainId:n.toString()})}var o=e.prototype;return o.signCancelTxNonce=function(e,n){try{return Promise.resolve(e.signTypedData(this.domain,i,{nonce:n}))}catch(e){return Promise.reject(e)}},o.signOffChainTransaction=function(e,t){try{var i=n.AbiCoder.defaultAbiCoder().encode(["bytes"],[t.data]);return Promise.resolve(e.signTypedData(this.domain,r,a({},t,{data:i})))}catch(e){return Promise.reject(e)}},e}();e.DOMAIN_BASE_CONFIG=t,e.EIP712_NONCE_TYPES=i,e.EIP712_OFFCHAIN_TRANSACTION_TYPES=r,e.MultiSigOffChainSDK=o});
